---
description: 記事作成時に有用なルール
globs: 
alwaysApply: false
---
記事を作成する場合は下記のポイントを満たすような記事を生成してください

## 高PV記事に共通するポイント（一般）

- **キャッチーなタイトル**  
  - 数字・強いキーワード・疑問形・Why/How を活用  
  - 読者への具体的ベネフィットや好奇心を刺激する語句を盛り込む  

- **読者の課題を解決する有益な内容**  
  - 明確な問題設定 → 解決策 → 実装例／結果 の順で構成  
  - チュートリアル・チェックリスト・成功／失敗談など再現性の高い情報を提供  

- **読みやすい構成とフォーマット**  
  - 見出し・段落・箇条書きで情報を小分けに  
  - 図表・画像・コードスニペットを適所に挿入して理解負荷を下げる  

- **ストーリー性・共感要素の挿入**  
  - 実体験や背景を交え、読者が「自分ごと化」できる流れに  
  - 驚き・発見・感情の起伏を意識して飽きさせない  

- **SEOと拡散経路の設計**  
  - 検索キーワードをタイトル・h2・本文に自然に配置  
  - 公開直後に SNS／コミュニティ投稿で初動トラフィックを獲得  
  - 定期的な追記・更新で検索順位と信頼性を維持  

---

## 高PV記事に特化したポイント（IT分野）

- **最新技術・トレンドをいち早くキャッチ**  
  - 新リリース・バージョンアップ・話題ライブラリを即日検証  
  - “Why it matters” を冒頭で示し、読者の導入ハードルを下げる  

- **具体的ハウツー／チュートリアル重視**  
  - 手順＋コマンド＋コード例を行単位で丁寧に解説  
  - 完全ガイド・スターターテンプレートを提供し“すぐ使える”を強調  

- **深掘りと専門性の担保**  
  - ベンチマーク・性能比較・内部実装解説など他記事と差別化できる深度  
  - 公式ドキュメントや論文を参照し、正確性と裏付けを示す  

- **コードスニペットとリポジトリ連携**  
  - GitHub リンク／デモサイトを添えて “動くもの” を証明  
  - コードはコピー＆ペースト可能な最小単位に分割し、コメントで補足  

- **コミュニティ連携とリアルタイム更新**  
  - タグ選定・投稿時間帯をコミュニティトレンドに合わせ最適化  

